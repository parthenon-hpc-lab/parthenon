FROM nvidia/cuda:12.6.0-devel-ubuntu24.04

RUN apt-get clean && apt-get update -y && \
    DEBIAN_FRONTEND="noninteractive" TZ=America/New_York apt-get install -y --no-install-recommends git python3-minimal libpython3-stdlib bc hwloc wget openssh-client python3-numpy python3-h5py python3-matplotlib python3-scipy python3-pip lcov curl cuda-nsight-systems-12-6 cmake ninja-build

RUN pip3 install unyt --break-system-packages

RUN pip3 install blosc2 --break-system-packages

RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key| apt-key add - && \
    echo "deb http://apt.llvm.org/noble/ llvm-toolchain-noble-19 main" > /etc/apt/sources.list.d/llvm.list

RUN apt-get clean && apt-get update -y && \
    DEBIAN_FRONTEND="noninteractive" TZ=America/New_York apt-get install -y --no-install-recommends clang-19 llvm-19 libomp-19-dev && \
    rm -rf /var/lib/apt/lists/*

RUN cd /tmp && \
    wget https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-4.1.4.tar.bz2 && \
    tar xjf openmpi-4.1.4.tar.bz2 && \
    cd openmpi-4.1.4 && \
    ./configure --prefix=/opt/openmpi --disable-mpi-fortran --disable-oshmem --with-cuda && \
    make -j16 && \
    make install && \
    cd / && \
    rm -rf /tmp/openmpi*

ENV LD_LIBRARY_PATH=/opt/openmpi/lib:$LD_LIBRARY_PATH \
    PATH=/opt/openmpi/bin:$PATH

RUN cd /tmp && \
    wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.2/src/hdf5-1.12.2.tar.gz && \
    tar xzf hdf5-1.12.2.tar.gz && \
    cd hdf5-1.12.2 && \
    mkdir -p /usr/local/hdf5/serial /usr/local/hdf5/parallel && \
    ./configure --prefix=/usr/local/hdf5/serial --enable-hl --enable-build-mode=production && make -j16 && make install && make clean && \
    ./configure --prefix=/usr/local/hdf5/parallel --enable-hl --enable-build-mode=production --enable-parallel && make -j16 && make install && \
    cd / && \
    rm -rf /tmp/hdf5-1.12.2*

RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 10

RUN curl -L https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2-linux-x86_64.tar.gz -o cmake-3.23.2-linux-x86_64.tar.gz && \
    tar -xzf cmake-3.23.2-linux-x86_64.tar.gz -C /opt

ENV PATH=/opt/cmake-3.23.2-linux-x86_64/bin:$PATH

RUN mkdir /tmp/build-adios2 && cd /tmp/build-adios2 && \
    git clone https://github.com/ornladios/ADIOS2.git ADIOS2 && \
    mkdir adios2-build && cd adios2-build && \
    cmake ../ADIOS2 -DADIOS2_USE_Blosc2=ON -DADIOS2_USE_Fortran=OFF && \
    make -j8 && make install && \
    cd / && \
    rm -rf /tmp/build-adios2

RUN openPMD_USE_MPI=ON pip3 install openpmd-api --no-binary openpmd-api --break-system-packages

COPY build_ascent_cuda.sh /tmp/build-ascent/build_ascent_cuda.sh

RUN cd /tmp/build-ascent && \
    bash build_ascent_cuda.sh && \
    cd / && \
    rm -rf /tmp/build-ascent
